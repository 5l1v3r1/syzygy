// Copyright 2014 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Defines the Kasko RPC interface.
[
    uuid(4FD41D5D-32DF-4C48-8394-19B880B6ACA4),
    version(1.0)
]
interface Kasko {

  // Represents a property to include in a diagnostic report.
  typedef struct {
      [string] const wchar_t* name;
      [string] const wchar_t* value;
  } CrashKey;

  // Represents a custom stream to include in a diagnostic report.
  typedef struct {
    unsigned long type;
    unsigned long size;
    [size_is(size)] const signed char *data;
  } CustomStream;

  // Specifies the type of Minidump to be included in a report.
  typedef enum {
    SMALL_DUMP,
    LARGER_DUMP,
    FULL_DUMP
  } DumpType;

  // Sends a diagnostic report for the caller process.
  // @param exception_info_address Optional exception information.
  // @param thread_id The (optional) faulting thread in the target process.
  // @param minidump_type The type of minidump to be included in the report.
  // @param crash_keys_size The number of entries in |crash_keys|.
  // @param crash_keys An optional array of crash keys. Keys with empty names or
  // @param custom_streams_size The number of entries in |custom_streams|.
  // @param custom_streams An optional array of custom streams.
  boolean SendDiagnosticReport(
      unsigned long exception_info_address, unsigned long thread_id,
      DumpType minidump_type,
      [in] unsigned long crash_keys_size,
      // unique -> optional
      // (http://blogs.msdn.com/b/oldnewthing/archive/2014/09/19/10559094.aspx)
      [in, unique, size_is(crash_keys_size)] const CrashKey* crash_keys,
      [in] unsigned long custom_streams_size,
      [in, unique, size_is(custom_streams_size)]
          const CustomStream* custom_streams);
}
